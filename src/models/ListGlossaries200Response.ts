/* tslint:disable */
/* eslint-disable */
/**
 * DeepL API Documentation
 * The DeepL API provides programmatic access to DeepLâ€™s machine translation technology.
 *
 * The version of the OpenAPI document: 2.9.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists, mapValues} from '../runtime'
import type {Glossary} from './Glossary'
import {
  GlossaryFromJSON,
  GlossaryFromJSONTyped,
  GlossaryToJSON,
} from './Glossary'

/**
 *
 * @export
 * @interface ListGlossaries200Response
 */
export interface ListGlossaries200Response {
  /**
   *
   * @type {Array<Glossary>}
   * @memberof ListGlossaries200Response
   */
  glossaries?: Array<Glossary>
}

/**
 * Check if a given object implements the ListGlossaries200Response interface.
 */
export function instanceOfListGlossaries200Response(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ListGlossaries200ResponseFromJSON(
  json: any,
): ListGlossaries200Response {
  return ListGlossaries200ResponseFromJSONTyped(json, false)
}

export function ListGlossaries200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ListGlossaries200Response {
  if (json === undefined || json === null) {
    return json
  }
  return {
    glossaries: !exists(json, 'glossaries')
      ? undefined
      : (json['glossaries'] as Array<any>).map(GlossaryFromJSON),
  }
}

export function ListGlossaries200ResponseToJSON(
  value?: ListGlossaries200Response | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    glossaries:
      value.glossaries === undefined
        ? undefined
        : (value.glossaries as Array<any>).map(GlossaryToJSON),
  }
}
