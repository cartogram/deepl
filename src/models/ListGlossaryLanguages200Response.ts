/* tslint:disable */
/* eslint-disable */
/**
 * DeepL API Documentation
 * The DeepL API provides programmatic access to DeepLâ€™s machine translation technology.
 *
 * The version of the OpenAPI document: 2.9.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { ListGlossaryLanguages200ResponseSupportedLanguagesInner } from './ListGlossaryLanguages200ResponseSupportedLanguagesInner'
import {
  ListGlossaryLanguages200ResponseSupportedLanguagesInnerFromJSON,
  ListGlossaryLanguages200ResponseSupportedLanguagesInnerFromJSONTyped,
  ListGlossaryLanguages200ResponseSupportedLanguagesInnerToJSON,
} from './ListGlossaryLanguages200ResponseSupportedLanguagesInner'

/**
 *
 * @export
 * @interface ListGlossaryLanguages200Response
 */
export interface ListGlossaryLanguages200Response {
  /**
   * The list of supported languages
   * @type {Array<ListGlossaryLanguages200ResponseSupportedLanguagesInner>}
   * @memberof ListGlossaryLanguages200Response
   */
  supportedLanguages?: Array<ListGlossaryLanguages200ResponseSupportedLanguagesInner>
}

/**
 * Check if a given object implements the ListGlossaryLanguages200Response interface.
 */
export function instanceOfListGlossaryLanguages200Response(
  value: object,
): boolean {
  let isInstance = true

  return isInstance
}

export function ListGlossaryLanguages200ResponseFromJSON(
  json: any,
): ListGlossaryLanguages200Response {
  return ListGlossaryLanguages200ResponseFromJSONTyped(json, false)
}

export function ListGlossaryLanguages200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ListGlossaryLanguages200Response {
  if (json === undefined || json === null) {
    return json
  }
  return {
    supportedLanguages: !exists(json, 'supported_languages')
      ? undefined
      : (json['supported_languages'] as Array<any>).map(
          ListGlossaryLanguages200ResponseSupportedLanguagesInnerFromJSON,
        ),
  }
}

export function ListGlossaryLanguages200ResponseToJSON(
  value?: ListGlossaryLanguages200Response | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    supported_languages:
      value.supportedLanguages === undefined
        ? undefined
        : (value.supportedLanguages as Array<any>).map(
            ListGlossaryLanguages200ResponseSupportedLanguagesInnerToJSON,
          ),
  }
}
