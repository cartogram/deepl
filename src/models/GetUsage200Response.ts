/* tslint:disable */
/* eslint-disable */
/**
 * DeepL API Documentation
 * The DeepL API provides programmatic access to DeepLâ€™s machine translation technology.
 *
 * The version of the OpenAPI document: 2.9.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetUsage200Response
 */
export interface GetUsage200Response {
    /**
     * Characters translated so far in the current billing period.
     * @type {number}
     * @memberof GetUsage200Response
     */
    characterCount?: number;
    /**
     * Current maximum number of characters that can be translated per billing period.
     * @type {number}
     * @memberof GetUsage200Response
     */
    characterLimit?: number;
    /**
     * Documents translated so far in the current billing period.
     * @type {number}
     * @memberof GetUsage200Response
     */
    documentLimit?: number;
    /**
     * Current maximum number of documents that can be translated per billing period.
     * @type {number}
     * @memberof GetUsage200Response
     */
    documentCount?: number;
    /**
     * Documents translated by all users in the team so far in the current billing period.
     * @type {number}
     * @memberof GetUsage200Response
     */
    teamDocumentLimit?: number;
    /**
     * Current maximum number of documents that can be translated by the team per billing period.
     * @type {number}
     * @memberof GetUsage200Response
     */
    teamDocumentCount?: number;
}

/**
 * Check if a given object implements the GetUsage200Response interface.
 */
export function instanceOfGetUsage200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetUsage200ResponseFromJSON(json: any): GetUsage200Response {
    return GetUsage200ResponseFromJSONTyped(json, false);
}

export function GetUsage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUsage200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'characterCount': !exists(json, 'character_count') ? undefined : json['character_count'],
        'characterLimit': !exists(json, 'character_limit') ? undefined : json['character_limit'],
        'documentLimit': !exists(json, 'document_limit') ? undefined : json['document_limit'],
        'documentCount': !exists(json, 'document_count') ? undefined : json['document_count'],
        'teamDocumentLimit': !exists(json, 'team_document_limit') ? undefined : json['team_document_limit'],
        'teamDocumentCount': !exists(json, 'team_document_count') ? undefined : json['team_document_count'],
    };
}

export function GetUsage200ResponseToJSON(value?: GetUsage200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'character_count': value.characterCount,
        'character_limit': value.characterLimit,
        'document_limit': value.documentLimit,
        'document_count': value.documentCount,
        'team_document_limit': value.teamDocumentLimit,
        'team_document_count': value.teamDocumentCount,
    };
}

